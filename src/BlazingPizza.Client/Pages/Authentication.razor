@page "/authentication/{action}"
@inject OrderState OrderState
@inject NavigationManager NavigationManager
@*To customize this: https://docs.microsoft.com/en-us/aspnet/core/security/blazor/webassembly/additional-scenarios?view=aspnetcore-3.1#customize-app-routes*@

<RemoteAuthenticatorViewCore TAuthenticationState="PizzaAuthenticationState"
                             AuthenticationState="RemoteAuthenticationState"
                             OnLogInSucceeded="RestorePizza"
                             Action="@Action" />

@code{
    [Parameter] public string Action { get; set; }

    public PizzaAuthenticationState RemoteAuthenticationState { get; set; } = new PizzaAuthenticationState();

    protected override void OnInitialized()
    {
        if (RemoteAuthenticationActions.IsAction(RemoteAuthenticationActions.LogIn, Action))
        {
            // Preserve the current order in local storage so that we don't lose it when user logs in
            RemoteAuthenticationState.Order = OrderState.Order;
        }
    }

    private void RestorePizza(PizzaAuthenticationState pizzaState)
    {
        if (pizzaState.Order != null)
        {
            OrderState.ReplaceOrder(pizzaState.Order);
        }
    }
}